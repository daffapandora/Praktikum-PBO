/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package guisimple;

import javax.swing.DefaultListModel;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.HashMap;
import java.util.List;
import java.util.Set;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author daffa pandora
 */
public class Proyek4GUISimple extends javax.swing.JFrame {
    
    DefaultListModel<String> dlm;
    List<String> listData = new ArrayList<>();
    Set<String> setData = new HashSet<>();
    Map<String, String> mapData = new HashMap<>();
    /**
     * Creates new form Proyek4GUISimple
     */
    public Proyek4GUISimple() {
        initComponents();
        this.dlm = new DefaultListModel<>();
        this.jList1.setModel(dlm); // Changed jListItem to jList1 and added semicolon

        updateJumlahDataList();
        updateJumlahDataSet();
        updateJumlahDataMap();
    }
    
    private void addItemToListModel(String itemName) {
        dlm.addElement(itemName);
        jTextFieldItem.setText(""); // Changed jTextFieldItemName to jTextFieldItem
    }

    private void updateJumlahDataList() {
        if (jLabelJumlahDataList != null) { // jLabelListData adalah nama JLabel untuk List
            jLabelJumlahDataList.setText("Data tersimpan List = " + listData.size());
        }
    }

    private void updateJumlahDataSet() {
        if (jLabelJumlahSet != null) { // jLabelSetData adalah nama JLabel untuk Set
            jLabelJumlahSet.setText("Data tersimpan Set = " + setData.size()); // Changed jLabelJumlahDataSet to jLabelJumlahSet
        }
    }

    private void updateJumlahDataMap() {
        if (jLabelJumlahDataMap != null) { // jLabelMapData adalah nama JLabel untuk Map
            jLabelJumlahDataMap.setText("Data tersimpan Map = " + mapData.size()); // Changed jLabelJumlahDataMapMapData to jLabelJumlahDataMap
        }
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButtonClearAll = new javax.swing.JButton();
        jButtonSavetoList = new javax.swing.JButton();
        jButtonInsertDataList = new javax.swing.JButton();
        jButtonSavetoSet = new javax.swing.JButton();
        jButtonInsertDataSet = new javax.swing.JButton();
        jButtonSavetoMap = new javax.swing.JButton();
        jButtonInsertDataMap = new javax.swing.JButton();
        jLabelJumlahDataList = new javax.swing.JLabel();
        jLabelJumlahSet = new javax.swing.JLabel();
        jLabelJumlahDataMap = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldItem = new javax.swing.JTextField();
        jButtonAdd = new javax.swing.JButton();
        jButtonupdate = new javax.swing.JButton();
        jButtondelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jButtonClearAll.setText("clear all");
        jButtonClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearAllActionPerformed(evt);
            }
        });

        jButtonSavetoList.setText("save to list ->");
        jButtonSavetoList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSavetoListActionPerformed(evt);
            }
        });

        jButtonInsertDataList.setText("<- insert data list");
        jButtonInsertDataList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertDataListActionPerformed(evt);
            }
        });

        jButtonSavetoSet.setText("save to set ->");
        jButtonSavetoSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSavetoSetActionPerformed(evt);
            }
        });

        jButtonInsertDataSet.setText("<- insert data set");
        jButtonInsertDataSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertDataSetActionPerformed(evt);
            }
        });

        jButtonSavetoMap.setText("save to map ->");
        jButtonSavetoMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSavetoMapActionPerformed(evt);
            }
        });

        jButtonInsertDataMap.setText("<- insert data map");
        jButtonInsertDataMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertDataMapActionPerformed(evt);
            }
        });

        jLabelJumlahDataList.setText("Data Tersimpan = ");

        jLabelJumlahSet.setText("Data Tersimpan = ");

        jLabelJumlahDataMap.setText("Data Tersimpan = ");

        jLabel1.setText("Item name:");

        jTextFieldItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldItemActionPerformed(evt);
            }
        });

        jButtonAdd.setText("add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonupdate.setText("update");
        jButtonupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonupdateActionPerformed(evt);
            }
        });

        jButtondelete.setText("delete");
        jButtondelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtondeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldItem, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonInsertDataList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonSavetoList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonInsertDataSet, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonInsertDataMap, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonSavetoSet, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonSavetoMap, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabelJumlahDataList, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                    .addComponent(jLabelJumlahSet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelJumlahDataMap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonupdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtondelete)))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSavetoList)
                            .addComponent(jLabelJumlahDataList))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonInsertDataList)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSavetoSet)
                            .addComponent(jLabelJumlahSet))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonInsertDataSet)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSavetoMap)
                            .addComponent(jLabelJumlahDataMap))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonInsertDataMap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonClearAll)
                    .addComponent(jButtonAdd)
                    .addComponent(jButtonupdate)
                    .addComponent(jButtondelete))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearAllActionPerformed
        dlm.clear();// TODO add your handling code here:
    }//GEN-LAST:event_jButtonClearAllActionPerformed

    private void jTextFieldItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldItemActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        String newItemName = jTextFieldItem.getText().trim(); // Changed jTextFieldItemName to jTextFieldItem
        if (!newItemName.isEmpty()) {
            dlm.addElement(newItemName); // Add new item to the list model
            jTextFieldItem.setText(""); // Clear the text field
        } else {
            JOptionPane.showMessageDialog(this, "Nama item tidak boleh kosong!", "Error", JOptionPane.ERROR_MESSAGE);
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonSavetoListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSavetoListActionPerformed
        if (!listData.isEmpty()) {
            listData.clear();
        }
        for (int i = 0; i < dlm.getSize(); i++) {
            listData.add(dlm.getElementAt(i));
        }
        updateJumlahDataList(); // Changed updateListDataLabel to updateJumlahDataList
        JOptionPane.showMessageDialog(this, "Data disimpan ke List!");
    // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSavetoListActionPerformed

    private void jButtonInsertDataListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertDataListActionPerformed
        dlm.clear(); // Kosongkan JList sebelum insert
        for (String item : listData) {
            dlm.addElement(item);
        }
         JOptionPane.showMessageDialog(this, "Data dari List dimasukkan ke JList!");
    // TODO add your handling code here:
    }//GEN-LAST:event_jButtonInsertDataListActionPerformed

    private void jButtonSavetoSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSavetoSetActionPerformed
        if (!setData.isEmpty()) {
            setData.clear();
        }
        for (int i = 0; i < dlm.getSize(); i++) {
            setData.add(dlm.getElementAt(i));
        }
        updateJumlahDataSet(); // Changed updateSetDataLabel to updateJumlahDataSet
        JOptionPane.showMessageDialog(this, "Data disimpan ke Set! (Duplikasi diabaikan)");
// TODO add your handling code here:
    }//GEN-LAST:event_jButtonSavetoSetActionPerformed

    private void jButtonInsertDataSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertDataSetActionPerformed
        dlm.clear(); // Kosongkan JList sebelum insert
        for (String item : setData) {
            dlm.addElement(item);
        }
        JOptionPane.showMessageDialog(this, "Data dari Set dimasukkan ke JList!");
    // TODO add your handling code here:
    }//GEN-LAST:event_jButtonInsertDataSetActionPerformed

    private void jButtonSavetoMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSavetoMapActionPerformed
        if (!mapData.isEmpty()) {
            mapData.clear();
        }
        // Untuk Map, kita perlu key unik. Di sini kita gunakan item itu sendiri sebagai key dan value.
        // Alternatif: gunakan indeks sebagai key.
        for (int i = 0; i < dlm.getSize(); i++) {
            String item = dlm.getElementAt(i);
            mapData.put(item, item); // Atau mapData.put("item_" + i, item);
        }
        updateJumlahDataMap(); // Changed updateMapDataLabel to updateJumlahDataMap
        JOptionPane.showMessageDialog(this, "Data disimpan ke Map!");
    // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSavetoMapActionPerformed

    private void jButtonInsertDataMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertDataMapActionPerformed
        dlm.clear(); // Kosongkan JList sebelum insert
        // Karena Map menyimpan key-value, kita ambil valuenya untuk ditampilkan di JList
        for (String value : mapData.values()) {
            dlm.addElement(value);
        }
        JOptionPane.showMessageDialog(this, "Data dari Map (values) dimasukkan ke JList!");
    // TODO add your handling code here:
    }//GEN-LAST:event_jButtonInsertDataMapActionPerformed

    private void jButtonupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonupdateActionPerformed
        int selectedIndex = jList1.getSelectedIndex(); // Changed jListItem to jList1
        if (selectedIndex != -1) {
            String newItemName = jTextFieldItem.getText().trim(); // Changed jTextFieldItemName to jTextFieldItem
            if (!newItemName.isEmpty()) {
                dlm.setElementAt(newItemName, selectedIndex);
                jTextFieldItem.setText(""); // Changed jTextFieldItemName to jTextFieldItem
            } else {
                JOptionPane.showMessageDialog(this, "Nama item baru tidak boleh kosong!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Pilih item yang akan diupdate!", "Error", JOptionPane.ERROR_MESSAGE);
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButtonupdateActionPerformed

    private void jButtondeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtondeleteActionPerformed
        int selectedIndex = jList1.getSelectedIndex(); // Changed jListItem to jList1
        if (selectedIndex != -1) {
            dlm.removeElementAt(selectedIndex);
        } else {
            JOptionPane.showMessageDialog(this, "Pilih item yang akan dihapus!", "Error", JOptionPane.ERROR_MESSAGE);
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButtondeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Proyek4GUISimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Proyek4GUISimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Proyek4GUISimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Proyek4GUISimple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Proyek4GUISimple().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonClearAll;
    private javax.swing.JButton jButtonInsertDataList;
    private javax.swing.JButton jButtonInsertDataMap;
    private javax.swing.JButton jButtonInsertDataSet;
    private javax.swing.JButton jButtonSavetoList;
    private javax.swing.JButton jButtonSavetoMap;
    private javax.swing.JButton jButtonSavetoSet;
    private javax.swing.JButton jButtondelete;
    private javax.swing.JButton jButtonupdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelJumlahDataList;
    private javax.swing.JLabel jLabelJumlahDataMap;
    private javax.swing.JLabel jLabelJumlahSet;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldItem;
    // End of variables declaration//GEN-END:variables
}
